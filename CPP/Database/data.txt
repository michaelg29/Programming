Michael,Manager
Mao,Boss
Stalin,Brother
Lenin,Founder
Trotsky,CEO
Trudeau,Son

int i;
		for (i = 0; i < data.size(); i++) {
			if (element->idx < data[i]->idx) {
				break;
			}
		}

		if (children.size() > i && !force) {
			children[i]->insert(element);
		}
		else {
			data.insert(data.begin() + i, element);
		}

		if (data.size() == M) {
			// M elements, no space
			// split and move divider up
			int divisor = M / 2 - 1;

			T* remEl = data[divisor];
			data.erase(data.begin() + divisor);

			node<T>* right = new node(M);
			right->parent = parent;

			if (parent) {
				// parent exists
				parent->insert(remEl, true);

				// find where inserted median element
				for (i = 0; i < parent->data.size(); i++) {
					if (parent->data[i]->idx == remEl->idx) {
						break;
					}
				}
				parent->children.insert(parent->children.begin() + i + 1, right);
			}
			else {
				// create parent

				// insert obj
				parent = new node<T>(remEl, M);
				parent->children.push_back(this);
				parent->children.push_back(right);
			}

			// split data
			while (data.size() != divisor) {
				right->data.push_back(data[divisor]);
				data.erase(data.begin() + divisor);
			}

			// split children
			if (children.size() != 0) {
				// not leaf node
				while (children.size() != divisor + 1) {
					right->children.push_back(children[divisor + 1]);
					children.erase(children.begin() + divisor + 1);
				}
			}
		}